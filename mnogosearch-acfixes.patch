--- mnogosearch-3.2.39/configure.in.orig	2006-05-28 13:48:13.000000000 +0200
+++ mnogosearch-3.2.39/configure.in	2006-08-24 15:44:28.655971000 +0200
@@ -629,7 +629,7 @@
                 else
                         SSL_INCDIR=/usr/local/ssl/include
                 fi
-                if test -f /usr/lib/libssl.a; then
+                if test -f /usr/lib/libssl.a -o -f /usr/lib/libssl.so; then
                         SSL_LIBDIR=/usr/lib
                 else
                         SSL_LIBDIR=/usr/local/ssl/lib
@@ -738,7 +738,11 @@
 
   AC_MSG_RESULT($path)
   CHASEN_INCLUDE="-I$path/include"
-  CHASEN_LFLAGS="-L$path/lib -lstdc++ -lchasen"
+  if test "$path" = "/usr" ; then
+	CHASEN_LFLAGS="-lchasen -lstdc++"
+  else
+	CHASEN_LFLAGS="-L$path/lib -lstdc++ -lchasen"
+  fi
   AC_DEFINE([HAVE_CHARSET_japanese], [1], [Define if you want Japanese support])
   ADDCHARSETS="japanese"
 ],
@@ -771,7 +775,11 @@
   fi
 
   AC_MSG_RESULT($path)
+  if test "$path" = "/usr"; then
+  LIBS="$LIBS -lmecab -lstdc++"
+  else
   LIBS="$LIBS -L$path/lib -lstdc++ -lmecab"
+  fi
   CFLAGS="$CFLAGS -I$path/include"
   AC_DEFINE([HAVE_CHARSET_japanese], [1], [Define if you want Japanese support])
   ADDCHARSETS="japanese"
@@ -803,7 +811,7 @@
 			withval="/usr/local/mysql"
 		elif test -f /usr/include/mysql/mysql.h; then
 			MYSQL_INCDIR=/usr/include/mysql
-			MYSQL_LIBDIR=/usr/lib/mysql
+			MYSQL_LIBDIR=/usr/lib
 			withval="/usr"
 		elif test -f /usr/include/mysql.h; then
 			MYSQL_INCDIR=/usr/include
@@ -838,7 +846,11 @@
 		fi
    	fi
     MYSQL_INCLUDE="-I$MYSQL_INCDIR"
+    if test "$MYSQL_LIBDIR" = "/usr/lib" ; then
+	MYSQL_LFLAGS="-lmysqlclient"
+    else
     MYSQL_LFLAGS="-L$MYSQL_LIBDIR -lmysqlclient"
+    fi
 
     AC_DEFINE([HAVE_MYSQL], [1], [Define if you want to use MySQL])
     AC_MSG_RESULT($withval)
@@ -877,8 +889,8 @@
                 test -f /usr/local/include/postgresql/libpq-fe.h && PGSQL_INCDIR=/usr/local/include/postgresql
 		test -f /usr/local/include/libpq-fe.h && PGSQL_INCDIR=/usr/local/include
 		PGSQL_LIBDIR=/usr/local/lib
-		test -f /usr/lib/libpq.a && PGSQL_LIBDIR=/usr/lib
-		test -f /usr/local/pgsql/lib/libpq.a && PGSQL_LIBDIR=/usr/local/pgsql/lib
+		test -f /usr/lib/libpq.so -o -f /usr/lib/libpq.a && PGSQL_LIBDIR=/usr/lib
+		test -f /usr/local/pgsql/lib/libpq.so -o -f /usr/local/pgsql/lib/libpq.a && PGSQL_LIBDIR=/usr/local/pgsql/lib
    	else
    		PGSQL_INCDIR=$withval/include
    		test -d $withval/include/pgsql && PGSQL_INCDIR=$withval/include/pgsql
@@ -886,7 +898,11 @@
    		test -d $withval/lib/pgsql && PGSQL_LIBDIR=$withval/lib/pgsql
    	fi
     PGSQL_INCLUDE="-I$PGSQL_INCDIR"
+    if test "$PGSQL_LIBDIR" = "/usr/lib"; then
+	    PGSQL_LFLAGS="-lpq"
+    else
     PGSQL_LFLAGS="-L$PGSQL_LIBDIR -lpq"
+    fi
     AC_DEFINE([HAVE_PGSQL], [1], [Define if you want to use PostgreSQL])
     AC_MSG_RESULT(yes)
     have_db=yes
@@ -916,7 +932,7 @@
                           install directory, defaults to /usr/local.],
 [
 	if test "$withval" = "yes"; then
-		withval=/usr/local
+		withval=/usr
 	fi
 
 	if test "$withval" != "no"; then
@@ -927,7 +943,11 @@
     			AC_MSG_RESULT(no)
 			AC_MSG_ERROR(Invalid iODBC directory - unable to find isql.h)
 		fi
+		if test "$IODBC_LIBDIR" = "/usr/lib"; then
+			IODBC_LFLAGS="-liodbc"
+		else
 		IODBC_LFLAGS="-L$IODBC_LIBDIR -liodbc"
+		fi
 		IODBC_INCLUDE="-I$IODBC_INCDIR"
 		AC_DEFINE([HAVE_IODBC], [1], [Define if you want to use iODBC])
 		AC_MSG_RESULT(yes)
@@ -954,12 +974,12 @@
 if test "$withval" != "no"; then
 	if test "$withval" = "yes"; then
 		if test -f /usr/include/sql.h; then
-			UNIXODBC_INCDIR=/usr/include
-			UNIXODBC_LIBDIR=/usr/lib
+			UNIXODBC_INCLUDE=
+			UNIXODBC_LFLAGS="-lodbc"
 			withval="/usr"
 		elif test -f /usr/local/include/sql.h; then
-			UNIXODBC_INCDIR=/usr/local/include
-			UNIXODBC_LIBDIR=/usr/local/lib
+			UNIXODBC_INCLUDE="-I/usr/local/include"
+			UNIXODBC_LFLAGS="-L/usr/local/lib -lodbc"
 			withval="/usr/local"
 		else
 			AC_MSG_RESULT(no)
@@ -967,16 +987,14 @@
 		fi
 	else
 		if test -f $withval/include/sql.h; then
-			UNIXODBC_INCDIR=$withval/include
-			UNIXODBC_LIBDIR=$withval/lib
+			UNIXODBC_INCLUDE="-I$withval/include"
+			UNIXODBC_LFLAGS="-L$withval/lib -lodbc"
 		else
     			AC_MSG_RESULT(no)
 			AC_MSG_ERROR(Invalid unixODBC directory - unable to find sql.h)
 		fi
 	fi
 	have_db=yes
-	UNIXODBC_LFLAGS="-L$UNIXODBC_LIBDIR -lodbc"
-	UNIXODBC_INCLUDE="-I$UNIXODBC_INCDIR"
 	AC_DEFINE([HAVE_UNIXODBC], [1], [Define if you want to use unixODBC])
 	AC_MSG_RESULT($withval)
 	if test "x$DBTYPE" = "x" ; then
@@ -1272,7 +1290,11 @@
     			AC_MSG_RESULT(no)
 			AC_MSG_ERROR(Invalid Ct-Lib directory - unable to find ctpublic.h)
 		fi
-		CTLIB_LFLAGS="-L$CTLIB_LIBDIR -lct -lcs -lsybtcl -lcomn -lintl"
+		if test "$CTLIB_LIBDIR" = "/usr/lib"; then
+			CTLIB_LFLAGS="-lct -lcs -lsybtcl -lcomn"
+		else
+			CTLIB_LFLAGS="-L$CTLIB_LIBDIR -lct -lcs -lsybtcl -lcomn -lintl"
+		fi
 		CTLIB_INCLUDE="-I$CTLIB_INCDIR"
 		AC_DEFINE([HAVE_CTLIB], [1], [Define if you want to use CT-LIB SyBase SQL Server])
 		AC_MSG_RESULT(yes)
@@ -1299,7 +1321,7 @@
                           install directory, defaults to /usr/local.],
 [
 	if test "$withval" = "yes"; then
-		withval=/usr/local
+		withval=/usr
 	fi
 
 	if test "$withval" != "no"; then
@@ -1313,7 +1335,11 @@
     			AC_MSG_RESULT(no)
 			AC_MSG_ERROR(Invalid FreeTDS directory - unable to find ctpublic.h)
 		fi
+		if test "$CTLIB_LFLAGS" = "/usr/lib"; then
+			CTLIB_LFLAGS="-lct"
+		else
 		CTLIB_LFLAGS="-L$CTLIB_LIBDIR -lct"
+		fi
 		CTLIB_INCLUDE="-I$CTLIB_INCDIR"
 		AC_DEFINE([HAVE_CTLIB], [1], [Define if you want to use CT-LIB SyBase SQL Server])
 		AC_MSG_RESULT(yes)
@@ -1349,7 +1375,11 @@
 		if test -f $d/include/sqlite.h; then
 			SQLITE_INCDIR=$d/include
 			SQLITE_LIBDIR=$d/lib
+			if test "$d" = "/usr"; then
+				SQLITE_LFLAGS="-lsqlite"
+			else
 			SQLITE_LFLAGS="-L$SQLITE_LIBDIR -lsqlite"
+			fi
 			SQLITE_INCLUDE="-I$SQLITE_INCDIR"		
 			path=$d
 			AC_MSG_RESULT($d)
@@ -1394,7 +1424,11 @@
 		if test -f $d/include/sqlite3.h; then
 			SQLITE3_INCDIR=$d/include
 			SQLITE3_LIBDIR=$d/lib
+			if test "$d" = "/usr"; then
+			SQLITE3_LFLAGS="-lsqlite3"
+			else
 			SQLITE3_LFLAGS="-L$SQLITE3_LIBDIR -lsqlite3"
+			fi
 			SQLITE3_INCLUDE="-I$SQLITE3_INCDIR"
 			path=$d
 			AC_MSG_RESULT($d)
